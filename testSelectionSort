package lab10package;

import org.junit.jupiter.api.Test;

import static org.junit.Assert.*;
import org.junit.Assert;
//import org.junit.Test;

	class testSelectionSort {
@Test
public void test() {
testPositive();
testNegative();
testMixed();
testDuplicates();
}
    public void testSelectionSort() {
    }

    public void testPositive(){
        int[] arr = new int[5];
        arr[0] = 8;
        arr[1] = 9;
        arr[2] = 7;
        arr[3] = 10;
        arr[4] = 2;

        int[] Sortedarr = new int[5];
        Sortedarr[0] = 2;
        Sortedarr[1] = 7;
        Sortedarr[2] = 8;
        Sortedarr[3] = 9;
        Sortedarr[4] = 10;


      /** add tests to check for this unit test **/
    }

    public void testNegative(){

    	   /** Test data contains negative values only **/
    }

    public void testMixed(){

		int[] arr = new int[5];
		 arr[0] = -8;
		 arr[1] = 9;
		 arr[2] = 7;
		 arr[3] = 0;
		 arr[4] = -2;

		 int[] Sortedarr = new int[5];
		 Sortedarr[0] = -8;
		 Sortedarr[1] = -2;
		 Sortedarr[2] = 0;
		 Sortedarr[3] = 7;
		 Sortedarr[4] = 9;

		 int[] sortthis = new int[5];
		 SelectionSort usethis = new SelectionSort();

		 sortthis = usethis.basicSelectionSort(arr);
		 assertArrayEquals(Sortedarr, sortthis);/** Test data contains with both positive, negative and zeros **/
    }

    public void testDuplicates(){

		int[] arr = new int[5];
			 arr[0] = -8;
			 arr[1] = 9;
			 arr[2] = -8;
			 arr[3] = 0;
			 arr[4] = 0;

			 int[] Sortedarr = new int[5];
			 Sortedarr[0] = -8;
			 Sortedarr[1] = -8;
			 Sortedarr[2] = 0;
			 Sortedarr[3] = 0;
			 Sortedarr[4] = 9;

			 int[] sortthis = new int[5];
			 SelectionSort usethis = new SelectionSort();

			 sortthis = usethis.basicSelectionSort(arr);
			 assertArrayEquals(Sortedarr, sortthis);/** Test data contains duplicates **/

    }
}
